name: coverage

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:

  badge:
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      SECRET: dna8sdh8ashd8asnd8asd
      ISSUER: turnierverwaltung
      USER: root
      PASSWORD: secret
      DATABASE: authentication
      SERVER: localhost
      PORT: 5432
      PGPASSWORD: secret
    services:
      postgres:
        # Docker Hub image
        image: postgres:latest
        env:
          POSTGRES_USER: "root"
          POSTGRES_PASSWORD: "secret"
          POSTGRES_DB: "authentication"
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Test with gradle
        run: ./gradlew test

      # Create Badge
      - name: Generate Jacoco Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v1.0.0
        with:
            jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"

      # Create Pull-Request
      - name: Create pull request
        if: ${{ github.event_name == 'push' }}
        uses: peter-evans/create-pull-request@v3.4.1
        with:
          title: 'Autogenerated Jacoco Coverage Badge'
          body: |
            Autogenerated Jacoco coverage badge, generated by
            the [jacoco-badge-generator](https://github.com/cicirello/jacoco-badge-generator)
            GitHub action.
          commit-message: Autogenerated Jacoco Coverage Badge
          labels: |
            report
            automated
            automerge
          branch: create-pull-request/badge
          delete-branch: true
