buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.4.1"
        classpath "gradle.plugin.com.heroku.sdk.heroku-gradle:heroku-gradle:2.0.0"
    }
}

apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "jacoco"
apply plugin: "com.heroku.sdk.heroku-gradle"

description "A simple authentication micro-service"
group "com.turnierverwaltung_api_auth"
version "1.0.0"
mainClassName = "io.ktor.server.netty.EngineMain"

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ["src"]
    test.kotlin.srcDirs = test.java.srcDirs = ["test"]
    main.resources.srcDirs = ["resources"]
    test.resources.srcDirs = ["testresources"]
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://kotlin.bintray.com/ktor" }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-gson:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    implementation "io.ktor:ktor-auth-jwt:$ktor_version"
    implementation "com.github.papsign:Ktor-OpenAPI-Generator:-SNAPSHOT"
    implementation "org.mindrot:jbcrypt:0.4"

    //environment variables
    implementation "io.github.cdimascio:dotenv-kotlin:6.2.1"

    //database
    implementation "org.jetbrains.exposed:exposed:0.17.6"
    implementation "com.zaxxer:HikariCP:3.4.5"
    implementation "org.postgresql:postgresql:42.2.1"

    //testing
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
}

jar {
    manifest {
        attributes 'Main-Class': 'src'
    }

    from {
        (configurations.compile).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.6"
}

task stage {
    dependsOn installDist
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports."

    dependsOn jacocoTestCoverageVerification

    reports {
        html.enabled true
        xml.enabled true
        csv.enabled true
        html.destination file("${buildDir}/reports/jacoco/")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.0
            }
        }
    }
}
